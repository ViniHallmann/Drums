name: Deploy to GitHub Pages

on: # Executa em pushes para 'develop' e qualquer branch que comece com 'releases-'
  push:
    branches:
      - develop
      - 'releases-*.*' # Padrão para 'releases-1.0', 'releases-1.1', etc.
      - 'feature/**'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  deploy:
    name: Deploy to gh-pages
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Determine Deployment Folder
        id: get_folder
        run: |
          ref_name="${{ github.ref_name }}"
          
          if [ "$ref_name" = "develop" ]; then
            echo "FOLDER_NAME=dev" >> $GITHUB_OUTPUT
                  
          elif [[ "$ref_name" == feature* ]]; then
            echo "FOLDER_NAME=$ref_name" >> $GITHUB_OUTPUT  # Se começar com 'feature/', o nome da pasta será a branch inteira.

          elif [[ "$ref_name" == releases-* ]]; then
            folder_name=${ref_name#releases-}               # Remove o prefixo 'releases-'
            echo "FOLDER_NAME=$folder_name" >> $GITHUB_OUTPUT
          
          else
            echo "Branch não configurada para deploy: $ref_name"
            exit 1 
          fi

      - name: Deploy to gh-pages branch
        uses: peaceiris/actions-gh-pages@v4
        with:
          
          github_token: ${{ secrets.GITHUB_TOKEN }}                    # Token para permitir que a action faça push na branch gh-pages                                                                        
          publish_branch: gh-pages                                     # Branch para onde os arquivos serão enviados
          publish_dir: .                                               # Diretório que será publicado. Publica na raiza '.'
          destination_dir: ${{ steps.get_folder.outputs.FOLDER_NAME }} # Publica no subdiretório que definimos no passo anterior
          
          keep_files: true
          force_orphan: true # Limpa o histórico do commit de deploy
          
      - name: Print Deployed URL
        run: |
          echo "https://vinihallmann.github.io/Drums/${{ steps.get_folder.outputs.FOLDER_NAME }}/"
